<?xml version="1.0" encoding="UTF-8"?>
<!-- Configures the Camel Context -->

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:cxf="http://camel.apache.org/schema/cxf"
	xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd
       http://camel.apache.org/schema/cxf http://camel.apache.org/schema/cxf/camel-cxf.xsd">


	<camelContext
		xmlns="http://camel.apache.org/schema/spring">
		<!-- here is a sample which processes the input files (leaving them in 
			place - see the 'noop' flag) then performs content based routing on the message 
			using XPath -->
		<onException>
			<exception>in.gov.lrit.asp.exception.ReceiptCodeException</exception>
			<handled>
				<constant>true</constant>
			</handled>
			<log message="before receiptgeneratorcode "></log>
			<process ref="RecieptCodegenerator" />
			<log message="after receiptgeneratorcode "></log>
			<log message="Sending 
			Receipt to DC" />
			<setHeader name="operationName">
				<constant>Receipt</constant>
			</setHeader>
			<setHeader name="operationNamespace">
				<constant>http://gisis.imo.org/XML/LRIT/2008</constant>
			</setHeader>
			<to uri="cxf:bean:dcendpoint?address={{Postion_Report_URL}}" />
			<log message="sent to dc" />
			<log message="body from IDE against Receipt 
			${body}"></log>
		</onException>
		



		<route id="mainroute">

			<from uri="cxf:bean:aspport" />
			<!-- <doTry> -->
			<log message="${in.header.operationName}" />
			<choice>
				<when>
					<simple>${in.header.operationName} == 'DNIDRequest'</simple>
					<log message="DNID Request Received from POrtal" />
					<process ref="dnidRequest" />
					<wireTap uri="direct:dnidRequestProcess" />
					<to uri="direct:successresponse" />
					<!-- <process ref="updateDnidStatus"/> -->
				</when>
				<when>
					<simple>${in.header.operationName} == 'ShipPositionRequest'
					</simple>
					<log message="Ship Position Report Received from ASP" />
					<process ref="PositionRequest" />
					<wireTap uri="direct:shipPositionRequestProcess" />
					<to uri="direct:Positionresponse" />

				</when>
				<otherwise>
					<log message="Not Valid Operation Name" />
					<!-- generate SOAP Fault -->
				</otherwise>
			</choice>
		</route>
 		
		<!-- route for delete and download request -->
		<route>
			<from uri="direct:dnidRequestProcess" />
			<doTry>
				<log message="read the message" />
				<process ref="downloadDNID" />
				<log message="header.validationStatus" />
				<log message="${in.header.validationStatus}" />

				<choice>
					<when>
						<simple>${in.header.validationStatus} == 'true'</simple>

						<process ref="sendMail" />
						<to uri="smtp://10.25.5.111:25?username=asp@lrit.gov.in&amp;password=Lrit@#4321" />    
						<choice>
							<when>
								<simple>${in.header.request_status} == 'Success'</simple>
								<log message="mail sent successfully." />
								<process ref="updateDnidStatus" />
								<log message="Db Updated" />
							</when>
							<otherwise>
								<log message="email Fail" />
							</otherwise>
						</choice>
					</when>
					<otherwise>
						<log message="validationStatus Fail" />
					</otherwise>
				</choice>

			</doTry>
		</route>


		<!-- route for position request -->
		<route>

			<from uri="direct:shipPositionRequestProcess" />
			<doTry>
				<log message="read the message" />
				<process ref="positionRequestASP" />
				<log message="header.validationStatus" />
				<log message="${in.header.validationStatus}" />

				<choice>
					<when>
						<simple>${in.header.validationStatus} == 'true'</simple>
						<process ref="sendMail" />
						<choice>
							<when>
								<simple>${in.header.Synchronise} == 'true'</simple>
								<log message="SYNCHRONIZED" />
							</when>
							<otherwise>
					      	<to uri="smtp://10.25.5.111:25?username=asp@lrit.gov.in&amp;password=Lrit@#4321" />	
							</otherwise>
						</choice>
						<choice>
							<when>
								<simple>${in.header.request_status} == 'Success'</simple>
								<log message="mail sent successfully." />
								<process ref="updateRequestStatus" />
								<log message="Db Updated" />
							</when>
							<otherwise>
								<log message="NO EMAIL" />
							</otherwise>
						</choice>
					</when>
					<otherwise>
						<log message="validationStatus Fail" />
					</otherwise>
				</choice>

			</doTry>
		</route>
		
		<route id="AckRoute">
			<from uri="direct:successresponse" />
			<process ref="updateDnidStatus" />
		</route>
		<route id="PositionRoute">
			<from uri="direct:Positionresponse" />
			<process ref="updateRequestStatus" />
		</route>






		<route id="emailroute">
			<from uri="imaps://mail.lrit.gov.in?username=asp@lrit.gov.in&amp;password=Lrit@#4321" />
			<doTry>
				<log message="read the email" />
				<process ref="myprocessor"></process>
				<log message="header.choice" />
				<log message="${in.header.contains}" />


				<choice>
					<when>
						<simple>${in.header.choice} == 'PR'</simple>
						<setHeader name="operationName">
							<constant>ASPShipPositionReport</constant>
						</setHeader>
						<setHeader name="operationNamespace">
							<constant>http://gisis.imo.org/XML/LRIT/2008</constant>
						</setHeader>

						<to uri="cxf:bean:dcendpoint?address={{Postion_Report_URL}}" />
						<!-- <process ref="myprocessor"></process> -->
						<log message="sent to dc" />
					</when>
					<when>
						<simple>${in.header.choice} == 'PDN'</simple>
						<choice>
							<when>
								<simple>${in.header.MAIL} == 'false'</simple>
								<log message="NO MAIL SENT AGAINST PDN" />
							</when>
							<otherwise>
					   	<to
						uri="smtp://10.25.5.111:25?username=asp@lrit.gov.in&amp;password=Lrit@#4321" />
						<log message="mail sent successfully." /> 
					</otherwise>
					</choice>
					</when>
					<when>
						<simple>${in.header.choice} == 'Invalid'</simple>
						<log message="email Not from authorized EMail Id's" />
					</when>
					<otherwise>
						<log message="email Processed" />
					</otherwise>
				</choice>

				<doCatch>
					<exception>in.gov.lrit.asp.exception.EmailFormatException
					</exception>
					<log message="CAUGHT Exception in Email format" />
				</doCatch>
			</doTry>
		</route>
		
		<route>
			<from uri="direct:lritAPI" />

			<setHeader name="processflag">
				<constant>1</constant>
			</setHeader>
			<process ref="apiprocessor"></process>

			<setHeader name="apiuri">
				<constant>http://125.169.117.90:50/api/v1/lrit</constant>
			</setHeader>
			<setHeader name="APIkey">
				<constant>7KEkDuLDY9n46HQ0vMzxHZeiIJsNemH5</constant>
			</setHeader>
			<setHeader name="Accept">
				<constant>application/json</constant>
			</setHeader>
			<setHeader name="Content-Type">
				<constant>application/json</constant>
			</setHeader>
			<setHeader name="processflag">
				<constant>2</constant>
			</setHeader>
			<doTry>
				<log message="After header set api call headers : = ${headers}" />
				<recipientList stopOnException="true">
					<simple>${headers.apiuri}</simple>
				</recipientList>
				<doCatch>
					<exception>java.io.IOException</exception>
					<log loggingLevel="ERROR"
						message="System unable to send request to Api Dashboard IOException ${exception.stacktrace}"></log>
				</doCatch>
				<doCatch>
					<exception>java.net.SocketTimeoutException</exception>
					<log loggingLevel="ERROR"
						message="Connection timeout with Api Dashboard With Socket Timeout ${exception.stacktrace}"></log>
				</doCatch>
			</doTry>
			<process ref="apiprocessor"></process>
		</route>
	</camelContext>
</beans>
      
      
    